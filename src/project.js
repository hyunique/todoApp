const projects = []

class Project{
    constructor(name, task, active = false, id = `P${(Date.now() + '').slice(-6)}`){
        this.name = name;
        this.task = [];
        this.active = active
        this.id = id;
    }
}

function inactivate() {
    const taskList = document.querySelector('.task--list')

    taskList.textContent=''
    projects.forEach(project => project.active = false);
}

function activate() {
    event.target.classList.add('active');
    projects.find(project => project.name === event.target.textContent).active = true;
}

function createNewProject(projectName) {
    // create new project object and push it to array
    projects.push(new Project(makeUpperCase(projectName)))   
}

function makeUpperCase(input) {
    return input.slice(0,1).toUpperCase() + input.slice(1);
}


//-----Functions for creating & displaying new tasks -----//
function findProject() {
    // querySelectorAll should stay in this function to select all elements including the ones generated by user input
    const projectItemAll = document.querySelectorAll('.project--item')

    // Find a project that contains 'active' class (=clicked by user)
    const activeProject = [...projectItemAll]
        .find(project => project.classList.contains('active'))

    // Find a exact data in 'proejcts' array that matches clicked project
    const activeProjectData = projects
        .find(project => project.name === activeProject.textContent).task
    
    // Return an object that contains both the project element and project data
    return {
        element: activeProject,
        data: activeProjectData
    };
}

export { projects, Project, inactivate, activate, createNewProject, makeUpperCase, findProject}